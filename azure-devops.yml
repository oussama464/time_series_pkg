trigger:
  - master
pool:
  vmImage: "ubuntu-latest"
stages:
  - stage: Build
    jobs:
      - job: setup_env_and_depencencies
        strategy:
          matrix:
            python38:
              python.version: "3.8"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "$(python.version)"
            displayName: "use Python $(python.version)"
          - script: |
              python -m pip install --upgrade pip 
              pip install virtualenv 
              virtualenv .venv

            displayName: "upgrade pip and activate venv"
          - script: |
              source .venv/bin/activate && pip install pytest build twine
              pip install -r requirements.txt
            displayName: installing deps
          - script: |
              source .venv/bin/activate && pytest
            displayName: "testing the package"
          - script: |
              source .venv/bin/activate && python -m build .
              cd dist && touch .pypirc
            displayName: Building time series package
          - task: CopyFiles@2
            inputs:
              Contents: "dist/*"
              TargetFolder: "$(build.artifactstagingdirectory)"
          - publish: $(Build.ArtifactStagingDirectory)
            artifact: dist
            displayName: publish build artifact
          - task: TwineAuthenticate@1
            inputs:
              artifactFeed: raw_coding_example_feed
            displayName: tiwne auth
          - script: |
              source .venv/bin/activate && twine upload -r "raw_coding_example_feed" --config-file $(PYPIRC_PATH) $(System.DefaultWorkingDirectory)/dist/*
  # - stage: Deploypackage
  #   displayName: Deploy to VM
  #   jobs:
  #     - deployment: Deployement
  #       environment:
  #         name: VM
  #         resourceType: VirtualMachine
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - download: current
  #                 displayName: download build artifact
  #                 artifact: dist
  #               - bash: ls $(Pipeline.Workspace)/dist/dist/
  #source .venv/bin/activate && twine upload -r "raw_coding_example_feed" --config-file $(PYPIRC_PATH) dist/*
  # stage
